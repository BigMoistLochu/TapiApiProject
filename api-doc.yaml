openapi: 3.0.0
info:
  title: Car API
  description: API for managing cars and engines
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
tags:
  - name: cars
    description: Operations related to cars
  - name: engines
    description: Operations related to engines
paths:
  /api/cars:
    get:
      tags:
        - cars
      summary: Get all cars
      description: Returns a list of all cars
      responses:
        '200':
          description: A list of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
    post:
      tags:
        - cars
      summary: Create a new car
      description: Adds a new car to the system
      requestBody:
        description: Car object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '201':
          description: Car created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '400':
          description: Invalid data structure or car with the given ID already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Błędna struktura danych.'
        '409':
          description: Car with the given ID already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Samochód z takim id już istnieje'
  /api/cars/{id}:
    put:
      tags:
        - cars
      summary: Update or create a car
      description: Updates the car details if the car exists, or creates a new car if not. Validates the data structure before proceeding.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the car to update or create
          schema:
            type: integer
            example: 1
      requestBody:
        description: Car object with updated details or to create if not found
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '201':
          description: Car created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '204':
          description: Car updated successfully (no content)
        '400':
          description: Invalid data structure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Błędna struktura danych.'
        '404':
          description: Car not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Nie znaleziono auta o podanym id'
    patch:
      tags:
        - cars
      summary: Update an existing car
      description: Updates the car's details, including engine, if provided
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the car to update
          schema:
            type: integer
            example: 1
      requestBody:
        description: Car object with updated details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
      responses:
        '200':
          description: Car updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '400':
          description: Invalid data structure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Błędna struktura danych.'
        '404':
          description: Car or engine not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Nie znaleziono auta lub silnika o podanym id'
    delete:
      tags:
        - cars
      summary: Delete a car by ID
      description: Deletes a car from the system based on its ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the car to delete
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Car deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Samochod o ID: 1 zostal usuniety'
        '400':
          description: Invalid car ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Nieprawidlowe ID samochodu.'
        '404':
          description: Car not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Samochod o podanym ID nie został znaleziony.'
    get:
      tags:
        - cars
      summary: Get a car by ID
      description: Retrieves a specific car from the system based on its ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the car to retrieve
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Car retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '400':
          description: Invalid car ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Nieprawidlowe ID samochodu.'
        '404':
          description: Car not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Samochod o podanym ID nie został znaleziony.'                
  /api/engines:
    get:
      tags:
        - engines
      summary: Get all engines
      description: Returns a list of all engines
      responses:
        '200':
          description: A list of engines
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Engine'
    post:
      tags:
        - engines
      summary: Create a new engine
      description: Adds a new engine to the system
      requestBody:
        description: Engine object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Engine'
      responses:
        '201':
          description: Engine created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Engine'
        '400':
          description: Invalid data structure or engine with the given ID already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Błędna struktura danych.'
        '409':
          description: Engine with the given ID already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Silnik z takim id już istnieje'

  /api/engines/{id}:
    get:
      tags:
        - engines
      summary: Get an engine by ID
      description: Retrieves a specific engine from the system based on its ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the engine to retrieve
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Engine retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Engine'
        '404':
          description: Engine not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Silnik o podanym ID nie został znaleziony.'
    put:
      tags:
        - engines
      summary: Update or create an engine
      description: Updates the engine details if the engine exists, or creates a new engine if not. Validates the data structure before proceeding.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the engine to update or create
          schema:
            type: integer
            example: 1
      requestBody:
        description: Engine object with updated details or to create if not found
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Engine'
      responses:
        '201':
          description: Engine created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Engine'
        '204':
          description: Engine updated successfully (no content)
        '400':
          description: Invalid data structure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Błędna struktura danych.'
        '404':
          description: Engine not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Nie znaleziono silnika o podanym id'
    patch:
      tags:
        - engines
      summary: Update an existing engine
      description: Updates the engine's details
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the engine to update
          schema:
            type: integer
            example: 1
      requestBody:
        description: Engine object with updated details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Engine'
      responses:
        '200':
          description: Engine updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Engine'
        '400':
          description: Invalid data structure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Błędna struktura danych.'
        '404':
          description: Engine not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Silnik o podanym ID nie został znaleziony.'
    delete:
      tags:
        - engines
      summary: Delete an engine by ID
      description: Deletes an engine from the system based on its ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the engine to delete
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Engine deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Silnik o ID: 1 został usunięty.'
        '404':
          description: Engine not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Silnik o podanym ID nie został znaleziony.'
  /api/manufacturers:
    get:
      tags:
        - manufacturers
      summary: Get all manufacturers
      description: Returns a list of all manufacturers
      responses:
        '200':
          description: A list of manufacturers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Manufacturer'
    post:
      tags:
        - manufacturers
      summary: Create a new manufacturer
      description: Adds a new manufacturer to the system
      requestBody:
        description: Manufacturer object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
      responses:
        '201':
          description: Manufacturer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        '400':
          description: Invalid data structure or manufacturer with the given ID already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Błędna struktura danych.'
        '409':
          description: Manufacturer with the given ID already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producent z takim ID już istnieje'

  /api/manufacturers/{id}:
    get:
      tags:
        - manufacturers
      summary: Get a manufacturer by ID
      description: Retrieves a specific manufacturer from the system based on its ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the manufacturer to retrieve
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Manufacturer retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        '404':
          description: Manufacturer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producent o podanym ID nie został znaleziony.'
    put:
      tags:
        - manufacturers
      summary: Update or create a manufacturer
      description: Updates the manufacturer details if the manufacturer exists, or creates a new manufacturer if not. Validates the data structure before proceeding.
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the manufacturer to update or create
          schema:
            type: integer
            example: 1
      requestBody:
        description: Manufacturer object with updated details or to create if not found
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
      responses:
        '201':
          description: Manufacturer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        '204':
          description: Manufacturer updated successfully (no content)
        '400':
          description: Invalid data structure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Błędna struktura danych.'
        '404':
          description: Manufacturer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Nie znaleziono producenta o podanym id'                
    
    patch:
      tags:
        - manufacturers
      summary: Update an existing manufacturer
      description: Updates the manufacturer's details
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the manufacturer to update
          schema:
            type: integer
            example: 1
      requestBody:
        description: Manufacturer object with updated details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
      responses:
        '200':
          description: Manufacturer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        '400':
          description: Invalid data structure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Błędna struktura danych.'
        '404':
          description: Manufacturer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producent o podanym ID nie został znaleziony.'

    delete:
      tags:
        - manufacturers
      summary: Delete a manufacturer by ID
      description: Deletes a manufacturer from the system based on its ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the manufacturer to delete
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Manufacturer deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producent o ID: 1 został usunięty.'
        '404':
          description: Manufacturer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Producent o podanym ID nie został znaleziony.'
components:
  schemas:
    Car:
      type: object
      properties:
        id:
          type: integer
          example: 1
        mark:
          type: string
          example: Audi
        age:
          type: integer
          example: 27
        color:
          type: string
          example: Czarny
        engine:
          $ref: '#/components/schemas/Engine'
    Engine:
      type: object
      properties:
        id:
          type: integer
          example: 1
        horsepower:
          type: integer
          example: 200
        fuelType:
          type: string
          example: Benzyna
        capacity:
          type: number
          format: float
          example: 2.0
        cylinders:
          type: integer
          example: 4
        manufacturer:
          $ref: '#/components/schemas/Manufacturer'
    Manufacturer:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Volkswagen Group
        country:
          type: string
          example: Niemcy
